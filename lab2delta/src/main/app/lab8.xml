<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <ws:consumer-config name="Delta_Web_Service_Consumer" wsdlLocation="http://airlines.cloudhub.io/delta?wsdl" service="TicketServiceService" port="TicketServicePort" serviceAddress="http://airlines.cloudhub.io/delta" doc:name="Web Service Consumer"/>
    <data-mapper:config name="S_Xml_findFlightResponse__To_Pojo" transformationGraphPath="xml_findflightresponse__to_pojo.grf" doc:name="Xml_findFlightResponse__To_Pojo"/>
    <data-mapper:config name="united_JSON_To_Pojo" transformationGraphPath="json_to_pojo.grf" doc:name="JSON_To_Pojo"/>
    <db:mysql-config name="American_MySQL_Configuration" host="training.cpk4jjb2mzwd.us-west-2.rds.amazonaws.com" port="3306" user="${db.user}" password="${db.password}" database="training" doc:name="MySQL Configuration"/>
    <data-mapper:config name="List_Map__To_Pojo2" transformationGraphPath="list_map__to_pojo.grf" doc:name="List_Map__To_Pojo2"/>
    <data-mapper:config name="Pojo_To_Xml_findFlight_" transformationGraphPath="pojo_to_xml_findflight_.grf" doc:name="Pojo_To_Xml_findFlight_"/>
    <catch-exception-strategy name="Catch_Exception_Strategy">
        <logger message="#[payload] is not valid." level="INFO" doc:name="Logger"/>
        <set-payload value="#[payload] is not valid." doc:name="Set Payload"/>
    </catch-exception-strategy>
    <flow name="delta" doc:name="delta">
        <vm:inbound-endpoint exchange-pattern="request-response"  doc:name="VM" address="vm://delta"/>
        <logger level="INFO" doc:name="Logger"/>
        <data-mapper:transform config-ref="Pojo_To_Xml_findFlight_" doc:name="Pojo To Xml&lt;findFlight&gt;"/>
        <ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Web Service Consumer"/>
        <data-mapper:transform config-ref="S_Xml_findFlightResponse__To_Pojo" doc:name="Xml&lt;findFlightResponse&gt; To Pojo"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="united" doc:name="united">
        <vm:inbound-endpoint exchange-pattern="request-response" path="${vm.united}" doc:name="VM"/>
        <http:outbound-endpoint exchange-pattern="request-response" host="airlines.cloudhub.io" port="80" path="united/flight/#[payload]" method="GET" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Logger"/>
        <data-mapper:transform config-ref="united_JSON_To_Pojo" doc:name="JSON To Pojo"/>
    </flow>
    <flow name="american" doc:name="american">
        <vm:inbound-endpoint exchange-pattern="request-response"  doc:name="VM" address="vm://${vm.american}"/>
        <db:select config-ref="American_MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select 	* 
from 	currentFlights
where	destination = #[payload];]]></db:parameterized-query>
        </db:select>
        <data-mapper:transform config-ref="List_Map__To_Pojo2" doc:name="List&lt;Map&gt; To Pojo"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <sub-flow name="getAllFlights" doc:name="getAllFlights">
        <json:json-to-object-transformer returnClass="com.mulesoft.training.FlightRequest" doc:name="JSON to Object"/>
        <set-payload value="#[payload.getDestination()]" doc:name="Set Payload"/>
        <flow-ref name="gettingAllFlights" doc:name="Flow Reference"/>
    </sub-flow>
    <sub-flow name="gettingAllFlights" doc:name="gettingAllFlights">
        <scatter-gather doc:name="Scatter-Gather">
            <vm:outbound-endpoint exchange-pattern="request-response" address="vm://${vm.delta}" doc:name="delta"/>
            <vm:outbound-endpoint exchange-pattern="request-response" path="${vm.american}" doc:name="american"/>
            <vm:outbound-endpoint exchange-pattern="request-response" path="${vm.united}" doc:name="united"/>
        </scatter-gather>
        <combine-collections-transformer doc:name="Combine Collections"/>
        <custom-transformer class="com.mulesoft.training.SortFlight" doc:name="Java"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </sub-flow>
    <flow name="mainFlow" doc:name="mainFlow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" path="flight" doc:name="HTTP"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties[&quot;http.method&quot;] == &quot;POST&quot;]">
                <flow-ref name="getAllFlights" doc:name="referenceToAllFlights"/>
            </when>
            <when expression="#[message.inboundProperties[&quot;http.method&quot;] == &quot;GET&quot;]">
                <flow-ref name="flight" doc:name="template"/>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger level="INFO" doc:name="Logger"/>
        <exception-strategy ref="Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
</mule>
